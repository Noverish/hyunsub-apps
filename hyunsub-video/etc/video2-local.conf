server {
  listen 80;
  server_name local-video2.hyunsub.kim;

  location / {
    return 301 https://local-video2.hyunsub.kim$request_uri;
  }
}

server {
  listen 443 ssl;
  server_name local-video2.hyunsub.kim;
  error_page 401 /unauthorized;

  ssl_certificate     /etc/nginx/cert/hyunsub.fullchain.pem;
  ssl_certificate_key /etc/nginx/cert/hyunsub.privkey.pem;

  location ~* \.(ico|css|js|map)$ {
    proxy_pass http://host.docker.internal:3000;
  }

  location / {
    auth_request /auth;
    auth_request_set $auth_redirect $upstream_http_x_redirect_url;

    proxy_pass http://host.docker.internal:3000;
  }

  location /api {
    auth_request /auth;
    auth_request_set $auth_header $upstream_http_hyunsub_auth;
    auth_request_set $auth_redirect $upstream_http_x_redirect_url;

    proxy_pass http://host.docker.internal:7002;
    proxy_set_header X-Hyunsub-Auth $auth_header;
    proxy_set_header X-Original-IP $remote_addr;
    proxy_set_header X-Original-URL $scheme://$http_host$request_uri$is_args$args;
  }

  location = /auth {
    internal;
    proxy_pass https://auth2.hyunsub.kim/api/v1/auth;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header X-Original-IP $remote_addr;
    proxy_set_header X-Original-URL $scheme://$http_host$request_uri$is_args$args;
  }

  location /unauthorized {
    internal;
    return 307 $auth_redirect;
  }

  location ~ ^/(ws|sockjs-node) {
    proxy_pass http://host.docker.internal:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }
}
