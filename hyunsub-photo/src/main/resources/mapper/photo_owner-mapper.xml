<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kim.hyunsub.photo.repository.mapper.PhotoOwnerMapper">
    <select id="select" resultType="PhotoOwner">
        SELECT user_id, photo_id, name, file_epoch, reg_dt, date, offset, date_type
        FROM photo_owner
        <where>
            <if test="userId != null">AND user_id = #{userId}</if>
            <if test="photoId != null">AND photo_id = #{photoId}</if>
            <if test="photoIds != null and !photoIds.isEmpty()">
                AND photo_id IN (<foreach collection="photoIds" item="v" separator=",">#{v}</foreach>)
            </if>
            <if test="name != null">
                <bind name="namePattern" value="'%' + name + '%'" />
                AND name LIKE #{namePattern}
            </if>
        </where>
        ORDER BY `date` DESC
        <if test="page != null">
            LIMIT #{page.pageSize} OFFSET #{page.offset}
        </if>
    </select>

    <select id="count">
        SELECT COUNT(*)
        FROM photo_owner
        <where>
            <if test="userId != null">AND user_id = #{userId}</if>
            <if test="photoId != null">AND photo_id = #{photoId}</if>
            <if test="photoIds != null and !photoIds.isEmpty()">
                AND photo_id IN (<foreach collection="photoIds" item="v" separator=",">#{v}</foreach>)
            </if>
            <if test="name != null">
                <bind name="namePattern" value="'%' + name + '%'" />
                AND name LIKE #{namePattern}
            </if>
        </where>
    </select>

    <select id="selectOne" resultType="PhotoOwner">
        SELECT user_id, photo_id, name, file_epoch, reg_dt, date, offset, date_type
        FROM photo_owner
        WHERE photo_id = #{photoId} AND user_id = #{userId}
    </select>

    <select id="countByPhotoIds" resultType="PhotoAndCount">
        SELECT photo_id, COUNT(photo_id) AS cnt
        FROM photo_owner
        WHERE photo_id IN (<foreach collection="photoIds" item="v" separator=",">#{v}</foreach>)
        GROUP BY photo_id
    </select>

    <insert id="insert">
        INSERT INTO photo_owner
        (user_id, photo_id, name, file_epoch, reg_dt, date, offset, date_type)
        VALUES
        (#{userId}, #{photoId}, #{name}, #{fileEpoch}, #{regDt}, #{date}, #{offset}, #{dateType})
    </insert>

    <update id="update">
        UPDATE photo_owner
        SET name = #{name},
            file_epoch = #{fileEpoch},
            date = #{date},
            offset = #{offset},
            date_type = #{dateType}
        WHERE user_id = #{userId} AND photo_id = #{photoId}
    </update>

    <update id="upsertBulk">
        INSERT INTO photo_owner
        (
            user_id,
            photo_id,
            name,
            file_epoch,
            reg_dt,
            date,
            offset,
            date_type
        )
        VALUES
        <foreach collection="entities" item="v" separator=",">
        (
            #{v.userId},
            #{v.photoId},
            #{v.name},
            #{v.fileEpoch},
            #{v.regDt},
            #{v.date},
            #{v.offset},
            #{v.dateType}
        )
        </foreach>
        ON DUPLICATE KEY UPDATE
            name = VALUES(name),
            file_epoch = VALUES(file_epoch),
            reg_dt = VALUES(reg_dt),
            date = VALUES(date),
            offset = VALUES(offset),
            date_type = VALUES(date_type)
    </update>

    <update id="updatePhotoId">
        UPDATE photo_owner
        SET photo_id = #{to}
        WHERE photo_id = #{from}
    </update>

    <delete id="delete">
        DELETE FROM photo_owner
        WHERE user_id = #{userId}
          AND photo_id = #{photoId}
    </delete>

    <delete id="deleteByUserId">
        DELETE FROM photo_owner
        WHERE user_id = #{userId}
    </delete>

    <delete id="deletePhotosOfOneUser">
        DELETE FROM photo_owner
        WHERE user_id = #{userId}
          AND photo_id IN (<foreach collection="photoIds" item="v" separator=",">#{v}</foreach>)
    </delete>
</mapper>
